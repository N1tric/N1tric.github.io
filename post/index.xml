<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Nutr1t07&#39;s Blog</title>
    <link>https://nutr1t07.github.io/post/</link>
    <description>Recent content in Posts on Nutr1t07&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 08 Apr 2020 08:46:22 +0800</lastBuildDate>
    
	<atom:link href="https://nutr1t07.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSS Div Shift in Unexpected Way</title>
      <link>https://nutr1t07.github.io/post/css-div-shift-in-unexpected-way/</link>
      <pubDate>Wed, 08 Apr 2020 08:46:22 +0800</pubDate>
      
      <guid>https://nutr1t07.github.io/post/css-div-shift-in-unexpected-way/</guid>
      <description>When writing the extremely simple blog theme I got a confusing problem that the position of the sidebar on the left of my front page is not the same as the article page: Pic1. It seems that it&amp;rsquo;s the scroll bar that causes the strange thing happened. When the article is long enough, the scroll bar appears, making the whole page shifts a little bit to the left.
A straightforward solution is to make the scroll bar always visible or invisible.</description>
    </item>
    
    <item>
      <title>Aeson Parsing Tips</title>
      <link>https://nutr1t07.github.io/post/aeson-parsing-tips/</link>
      <pubDate>Sat, 04 Apr 2020 21:19:09 +0800</pubDate>
      
      <guid>https://nutr1t07.github.io/post/aeson-parsing-tips/</guid>
      <description>Array with Objects Suppose we have the JSON data:
{ &amp;quot;media_id&amp;quot;: &amp;quot;981538&amp;quot;, &amp;quot;tags&amp;quot;: [ { &amp;quot;id&amp;quot;: 12227, &amp;quot;name&amp;quot;: &amp;quot;english&amp;quot; }, { &amp;quot;id&amp;quot;: 58971, &amp;quot;name&amp;quot;: &amp;quot;japanese&amp;quot; } ] } We want it to be parsed into the following structure, with the r_tags taking only the name field of tags.
data Result = Result { r_id :: Text , r_tags :: [Text] } The easiest way is to parse via newtype wrapper:</description>
    </item>
    
    <item>
      <title>用例子理解批处理脚本</title>
      <link>https://nutr1t07.github.io/post/understand-windows-batch-with-example/</link>
      <pubDate>Thu, 26 Mar 2020 12:54:37 +0000</pubDate>
      
      <guid>https://nutr1t07.github.io/post/understand-windows-batch-with-example/</guid>
      <description>我们来看看如何将目录下的每一个文件加上原目录名的前缀：
for /f &amp;quot;delims=&amp;quot; %%i in (&#39;dir /ad/b&#39;) do ( :: 遍历子目录 for /f &amp;quot;delims=&amp;quot; %%j in (&#39;dir /b %%i&#39;) do ( :: 遍历子目录下文件 echo %%j | findstr &amp;quot;^%%i&amp;quot; &amp;amp;&amp;amp; (echo No need to rename.) || (move &amp;quot;%%i\\%%j&amp;quot; &amp;quot;%%i\\%%i-%%j&amp;quot;) ) ) 解释 for 循环 看看上面的脚本中的这一句：
for /f &amp;quot;delims=&amp;quot; %%i in (&#39;dir /ad/b&#39;) do ( 此处for语句的结构是 FOR %variable IN (set) DO command [command-parameters] 。参数的说明如下：
 %variable: 在遍历中每个(set)中文件的替代符号(只能使用一个字母，否则多余部分会被当成字符串处理) (set): 表示一个或多个文件 (括号不能省去) command: 对于每一个(set)中的文件所要执行的操作 [command-parameters]: 可选的，上述command所要带的参数  当你在脚本文件中声明(%variable)时，请使用%%i而非%i。并注意变量名是区分大小写的(如%%i与%%I是两个不同的替代符)。你可以用Win+R打开cmd,在其中输入语句+空格+/?</description>
    </item>
    
    <item>
      <title>Compiling Statically With Glibc Raises Segfault at Runtime</title>
      <link>https://nutr1t07.github.io/post/compiling-statically-with-glibc-raises-segfault-at-runtime/</link>
      <pubDate>Thu, 12 Mar 2020 03:25:12 +0000</pubDate>
      
      <guid>https://nutr1t07.github.io/post/compiling-statically-with-glibc-raises-segfault-at-runtime/</guid>
      <description>I’m writing a chatting bot with Haskell and I need to statically compile my program, run it on the server which is running on Ubuntu 18.04 bionic. When I built my stack project with GHC option -optl-static, running it, I got a segfault. Checking the core dump file and I got this:
Stack trace of thread 26051: #0 0x00007f5ce4cef448 n/a (/lib/x86\_64-linux-gnu/libnss\_files-2.27.so) #1 0x00007f5ce4cf08bd \_nss\_files\_gethostbyname4\_r (/lib/x86\_64-linux-gnu/libnss\_files-2.27.so) #2 0x0000000001a41d66 n/a (/home/nutr1t07/wl) #3 0x0000000001a42c39 n/a (/home/nutr1t07/wl) #4 0x0000000000ddcf91 n/a (/home/nutr1t07/wl) I ran the same program on my PC, it raised a segfault as well.</description>
    </item>
    
    <item>
      <title>HIE in Nvim on Archlinux</title>
      <link>https://nutr1t07.github.io/post/hie-in-nvim-on-archlinux/</link>
      <pubDate>Thu, 19 Dec 2019 07:44:45 +0000</pubDate>
      
      <guid>https://nutr1t07.github.io/post/hie-in-nvim-on-archlinux/</guid>
      <description>HIE(Haskell IDE Engine) is an engine for IDE/Editor integration and was first released on May 3, 2018. Before HIE, there was a project for Haskell programming enrichment which named ghc-mod. But that one was deprecated on Jan 25, 2019.1
As a modern integration tool for Haskell, HIE comes with a great number of features:
 Uses LSP, so should be easy to integrate with a wide selection of editors Diagnostics via hlint and GHC warnings/errors Code actions and quick fixes via apply-refact Show type information and documentation(via haddock) on hover List all top-level definitions Automatic completion Formatting via brittany Renaming via HaRe Typo quick fixes Add missing imports (via hsimport)  In this article, I’ll show you how to use HIE with ALE(Asynchronous Lint Engine) or coc.</description>
    </item>
    
    <item>
      <title>多巴胺与近视发展</title>
      <link>https://nutr1t07.github.io/post/dopamine-and-myopia-development/</link>
      <pubDate>Sat, 31 Aug 2019 07:09:51 +0000</pubDate>
      
      <guid>https://nutr1t07.github.io/post/dopamine-and-myopia-development/</guid>
      <description>多巴胺是视网膜中重要的神经递质，介导多种功能，包括视觉传递和屈光发育。1来自不同物种的几个实验数据表明，多巴胺起抑制屈光发育的作用。2该现象体现于灵长类动物、鸡和豚鼠形觉剥夺后带来的视网膜或玻璃体的多巴胺和/或3,4-二羟基苯乙酸(视网膜中多巴胺的主要代谢产物)水平降低。3
如果近视眼发育期间多巴胺水平降低和/或信号传导减少，则可预测增加多巴胺水平和多巴胺受体活性能预防近视。实验说明，多巴胺水平提升和使用多巴胺受体激动剂增加多巴胺信号传导，可防止几种动物的形觉剥夺性近视。4这些研究表明，在异常视觉条件(如形觉剥夺)下生长的常规屈光眼生长缺少多巴胺受体激活，且增加眼内多巴胺水平可以防止近视生长。
另有研究显示室外活动与近视发展呈反比关系5，其中一个备受关注的领域是强光对近视发展的保护作用，并可能通过多巴胺信号传导。在户外度过更多时间的儿童会延迟近视发作。6这是由于强光，而不是活动或其他因素。7这些保护作用归因于视网膜多巴胺水平升高和多巴胺受体激活，因为多巴胺D2样受体拮抗剂螺哌隆酮(Spiperone)能够阻断强光的这种保护作用。8多巴胺的释放会根据光照强度和图像对比度进行调控，两者都由感光细胞检测且与近视发展有关。因此，暴露于强光可以是通过增加视网膜中的多巴胺水平来控制近视发展的环境干预式方法。视网膜多巴胺可通过触发视网膜或脉络膜中的一氧化氮释放而诱发脉络膜增厚和眼球生长抑制。9
此外，动物研究显示亮光减少近视是在标准实验室条件下完成的，其亮度和色度没有改变，不能模拟真实世界的自然环境，因为自然环境中的亮度会根据一天中的时间不断变化。这可能造成室外光线照射对雏鸡形觉剥夺性近视发育具有不同影响。10 这些观察结果表明，治疗近视的药理学方法可能比环境干预更有效。
从开发基于多巴胺的治疗策略的角度来看，多巴胺药物治疗儿童具有一定的潜在毒理学后果。多巴胺是脑和视网膜中的主要神经递质，也是心血管，内分泌和免疫功能的重要生理调节剂。在发育中的大脑中，多巴胺系统的过度激活已被证明会产生类似精神分裂症的行为改变。11与这些临床前研究一致，在少数近视儿童的L-DOPA(3,4-二羟苯丙氨酸)临床试验中发现了一些轻微的副作用，包括恶心，头痛，疲劳，情绪变化，呕吐，头晕，口干，食欲下降和梦魇；联合使用卡维多巴(一种外周多巴脱羧酶抑制剂)与L-DOPA可减少副作用。12此外，在开发用兴奋剂治疗注意力缺陷障碍(ADD)/注意力缺陷多动障碍(ADHD)的儿童，通过增加大脑中的细胞外多巴胺水平(包括利他林，Adderall和Dexedrine)，常见的副作用包括感觉不安和紧张，睡眠困难，食欲不振，头痛，胃部不适，烦躁，情绪波动，抑郁，头晕，心跳加速和抽搐。13美国心脏协会建议所有人，包括儿童，在开始兴奋剂之前进行心脏评估。14此外，ADD/ADHD药物对年轻、正在发育的大脑的长期影响尚不清楚。
然而，多巴胺受体激动剂可提供具有较少副作用的治疗选择。 多巴胺受体激动剂目前已获FDA批准用于治疗各种疾病，包括帕金森病，不安腿综合征和糖尿病。然而，在发育的关键时期使用多巴胺受体激动剂可能是有害的。 多巴胺受体对葡萄糖代谢具有深远影响。14因此，在多巴胺受体激动剂可被视为儿童的抗近视药物之前，必须对多巴胺对视觉和全身功能的可能副作用进行广泛研究。
* 翻译，裁剪自: Zhou X, Pardue MT, Iuvone PM, Qu J. Dopamine signaling and myopia development: What are the key challenges. Prog Retin Eye Res. 2017; 61: 60–71.
  Witkovsky P. Dopamine and retinal function. Doc Ophthalmol. 2004;108:17–40. &amp;#x21a9;&amp;#xfe0e;
 Feldkaemper M, Schaeffel F. An updated view on the role of dopamine in myopia. Exp Eye Res. 2013;114:106–119. &amp;#x21a9;&amp;#xfe0e;
  Dong F, Zhi Z, Pan M, Xie R, Qin X, Lu R, Mao X, Chen JF, Willcox MD, Qu J, Zhou X.</description>
    </item>
    
  </channel>
</rss>